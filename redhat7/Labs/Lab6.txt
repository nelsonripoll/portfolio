Lab 6

In this lab, you'll test a Secure Shell client on any and all virtual machines that you've created. Hopefully, you'll remember the root administrative password configured during the installation process.

1. To see how the system works, first run the following command on the local system (if desired, substitute 127.0.0.1 for localhost):

# ssh localhost

2. Proceed with the login to the localhost system. Log out with the exit command.

3. Review the current known hosts for the system with the cat ~/.ssh/known_hosts command. The file may appear incomprehensible, but you'll see a line such as the following near the end of the file, which refers to the public RSA key from the localhost system:

localhost ecdsa-sha2-nistp256 AAAAE2VjZHNhL...

4. Repeat the process with a remote system such as server1.example.com, or the equivalent IP address such as 192.168.122.50. After returning to the local system, what do you see added to the known_hosts file? (Direct connections to the server1.example.com system may not work until you've set up the /etc/hosts file as discussed in Chapter 3.)

5. This step requires access to the GUI on a local system and GUI applications on the remote system. If you've followed the instructions so far in Chapters 1 and 2, you'll have a number of systems that meet these requirements. With that in mind, log in to the noted remote system from a local GUI-based terminal with the following command (substitute an appropriate hostname or IP address as needed):

# ssh -X root@192.168.122.50

6. Now try to open a GUI application on the remote system, perhaps even the Firefox web browser (if that's installed) with the firefox command. To confirm success, look at the title bar of the window that appears. It should display a message with the location of the remote application, such as the following:

Welcome to Firefox - Mozilla Firefox (on server1.example.com)

7. Exit from the remote application and then exit from the remote system.

